% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/smoother.R
\name{smoother}
\alias{smoother}
\title{Smooth noisy data}
\usage{
smoother(x, n = NULL, method = "movav", plot = TRUE, panel = "all")
}
\arguments{
\item{x}{numeric. A numeric vector.}

\item{n}{numeric. Smoothing factor. See Details.}

\item{method}{string. Smoothing method: \code{"movav"}, \code{"loess"}, \code{"spline"}, or
\code{"supersmooth"}.}

\item{plot}{logical. Plots the result.}

\item{panel}{Which panel(s) of the plot to show. Default is \code{"all"}, other
options are \code{1}, \code{2} or \code{3}. See Details.}
}
\value{
Returns a vector of smoothed values of the same length as the input.
}
\description{
Simple smoothing function with several methods.
}
\details{
Smooths a vector using one of four methods. The \code{n} input controls
the degree of smoothing. If \code{n} is between 0 and 1 it represents a
proportion of the data length (i.e. 0.1 is a window of 10\% of the total
data). If \code{n} is above 1 it specifies a window of a number of data values
(i.e. \code{n = 20} in a dataset of 200 values would represent a window of 10\% of
the data length). The same \code{n} value will have radically different results
with different methods.

For all methods a vector of equal length as \code{x} containing the smoothed
values is returned.

\strong{\code{method = "movav"}}

A moving average (rolling mean). Good for data which is noisy, but which
does not oscillate sharply. \code{n} controls the window size for the moving
average. For each data value, half the window width forward and half
backward are averaged to produce the smoothed values. At the start and end
of the vector where n/2 would extend beyond the start or end, the available
data points are averaged.

\strong{\code{method = "loess"}}

Locally estimated scatterplot smoothing. Good for data which oscillates in a
non-predictable manner. The \code{n} input is parsed to be the \code{span}
operator of the \code{loess} function. For more control over smoothing using this
method, see \code{\link[=loess]{loess()}}.

\strong{\code{method = "spline"}}

Cubic smoothing spline. Good for data which oscillates in a somewhat regular
manner, such as a sinusoidal wave. The \code{n} input is parsed to be the
\code{spar} operator of the \code{smooth.spline} function. If \code{n = NULL}, the
\code{smooth.spline} 'cross-validation' option is used to estimate the 'best'
\code{spar} value between 0 and 1, though this is not returned and results may
vary. For more control over smoothing using this method, see
\code{\link[=smooth.spline]{smooth.spline()}}.

\strong{\code{method = "supersmooth"}}

Friedman's SuperSmoother. Good for data which oscillates in a somewhat
regular manner, such as a sinusoidal wave. The \code{n} input is parsed to be the
\code{span} operator of the \code{supsmu} function. If \code{n = NULL}, the \code{supsmu}
'cross-validation' option is used to estimate the 'best' \code{span} value
between 0 and 1, though this is not returned and results may vary. Smoothing
performs well at much lower \code{n} values in comparison to other methods. See
examples. For more control over smoothing using this method, see \code{\link[=supsmu]{supsmu()}}.
}
\section{Plotting}{
 If \code{plot = TRUE} a three panel plot is produced of the
original data values, the smoothed data values, and the smoothed data
plotted as a line over the original data. Each single panel can be plotted
alone using the \code{panel} argument (e.g. \code{panel = 3}).
}

\examples{
## Moving average smoothing
## Using a 10\% rolling window
smoother(resp_noisy.rd, n = 0.1, method = "movav")
## Same size window expressed as number of data values
smoother(resp_noisy.rd, n = 94, method = "movav")

## Loess smoothing
## Good fit to the data, but doesn't capture the sinusoidal structure that well
smoother(sine_noisy.rd, n = 0.1, method = "loess")
## Higher 'n' works much better in this case
smoother(sine_noisy.rd, n = 0.2, method = "loess")
## But too high and range is lost
smoother(sine_noisy.rd, n = 0.4, method = "loess")

## Spline smoothing
smoother(swim_y.rd, n = 0.4, method = "spline")

## Supersmooth
## Same 'n' as above is much too high
smoother(swim_y.rd, n = 0.4, method = "supersmooth")
## Much smaller values work better with this method
smoother(swim_y.rd, n = 0.01, method = "supersmooth")

## Change plot output
## Plot all panels
smoother(swim_y.rd, n = 0.01, method = "supersmooth",
       plot = TRUE, panel = "all")
## Only plot third panel
smoother(swim_y.rd, n = 0.01, method = "supersmooth",
       plot = TRUE, panel = 3)

}
\author{
Nicholas Carey - \email{nicholascarey@gmail.com}
}
